#Spring datasource configuration properties should be prefix with spring.datasource.*
spring.datasource.url=jdbc:mysql://localhost/test_database?useSSL=false
spring.datasource.username=root
spring.datasource.password=mysql@150
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=false

#If you want to set up a specific data source implementation, 
#the property names should be specify with respective prefix as 
#spring.datasource.hikari.*, spring default data source connection pool
#spring.datasource.tomcat.*, tomcat
#spring.datasource.dbcp2.*  Apache common DBCP2

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)  [production system should have value set to validate]
#[update : When you define a domain model, a table will automatically be created in the database and the fields of the domain model 
#will be mapped to the corresponding columns in the table.
#Any change to the domain model will also trigger an update to the table.
# For example, If you change the name or type of a field, or add another field to the model, 
#then all these changes will be reflected in the mapped table as well.]
spring.jpa.hibernate.ddl-auto = update